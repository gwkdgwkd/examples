#include <iostream>

// 视C++为一个语言联邦

// 一开始，C++只是C加上一些面向对象特性。
// 今天的C++已经是个多重范型语言，一个同时支持过程式、面向对象式、函数形式、泛型形式、元编程形式的语音。

// 将C++视为一个由相关语言组成的联邦而非单一语言：
// C： C++仍是以C为基础。区块、语句、预处理器、内置数据类型、数组、指针等统统来自C。
// Object-Oriented C++：就是C with Classes。classes（包括构造函数和析构函数），封装、继承、多态、virtual函数（动态绑定）等等。
// Template C++：C++的泛型编程部分。templates威力强大，带来了崭新的编程范型，TMP（模板元编程）。
// STL：STL是个template程序库。容器、迭代器、算法以及函数对象的规约哟极佳的紧密配合与协调。

// 请记住：
// C++高效编程守则视状况而变化，取决于使用C++的哪一部分。

int main() { return 0; }