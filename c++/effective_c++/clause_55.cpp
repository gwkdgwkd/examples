#include <iostream>

using namespace std;

// 让自己熟悉Boost

// Boost是一个C++开发者集结的社群，也是一个可自由下载的C++程序库群。网址是http://boost.org。
// 世界上有很多C++组织和网站，但Boost有两件事是其他组织无可匹敌的：
//  第一，它和C++标准委员会之间有着独一无二的密切关系，并且对委员会深具影响力。TR1的14个新程序库中，超过三分之二基于Boost的工作成果。
//  第二，它接纳程序库的过程：以公开进行的同僚复审为基础。

// Boost程序库的主题非常繁多，区分数十个类目，包括：
//  字符串与文本处理，覆盖具备类型安全的printf-like格式化动作、正则表达式，以及语汇单元切割和解析。
//  容器，覆盖”接口与STL相似且大小固定“的数组、大小可变的bitset以及多维数组。
//  函数对象和高级编程，覆盖若干被用来作为TR1机能基础的程序库。其中一个是Lambda。
//  泛型编程，覆盖一大组traits class。
//  模板元编程，覆盖一个针对编译期assertions而写的程序库，以及Boost MPL程序库。
//  数学和数值，包括有理数、八元数和四元数、常见的公约数和少见的多重运算、随机数。
//  正确性与测试，覆盖用来将隐式模板接口形式化的程序库，以及针对测试优先的编程形态而设计的措施。
//  数据结构，覆盖类型安全的unions以及tuple程序库。
//  语言间的支持，包括允许C++和Python之间的无缝互操作性。
//  内存，覆盖Pool程序库，用来做出高效而区块大小固定的分配器，以及多变化的智能指针。
//  杂项，包括CRC检验、日期和时间处理、在文件系统上来回移动等等。

// 没有针对GUI开发而设计的程序库，也没有用以连通数据库的程序库。

// 请记住：
// Boost是一个社群，也是一个网站。致力于免费、开源、同僚复审的C++程序库开发。Boost在C++标准化过程中扮演深具影响力的角色。
// Boost提供许多RT1组件实现品，以及其他许多程序库。

int main() { return 0; }