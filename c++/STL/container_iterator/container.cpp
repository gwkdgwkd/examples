#include <iostream>

using namespace std;

// 在实际的开发过程中，合理组织数据的存取与选择处理数据的算法同等重要，存取数据的方式往往会直接影响到对它们进行增删改查操作的复杂程度和时间消耗。
// 事实上，当程序中存在对时耗要求很高的部分时，数据结构的选择就显得尤为重要，有时甚至直接影响程序执行的成败。
// STL中提供了专家级的几乎我们所需要的各种容器，功能更好，复用性更高。

// 简单的理解容器，它就是一些模板类的集合，但和普通模板类不同的是，容器中封装的是组织数据的方法（也就是数据结构）。
// STL提供有3类标准容器，分别是序列容器、排序容器和哈希容器，其中后两类容器有时也统称为关联容器。
//  序列容器:主要包括vector向量容器、list列表容器以及deque双端队列容器。之所以被称为序列容器，是因为元素在容器中的位置同元素的值无关，即容器不是排序的。
//          将元素插入容器时，指定在什么位置，元素就会位于什么位置。
//  排序容器:包括set集合容器、multiset多重集合容器、map映射容器以及multimap多重映射容器。排序容器中的元素默认是由小到大排序好的，即便是插入元素，元素
//          也会插入到适当位置。所以关联容器在查找时具有非常好的性能。
//  哈希容器:C++11新加入4种关联式容器，分别是unordered_set哈希集合、unordered_multiset哈希多重集合、unordered_map哈希映射以及unordered_multimap
//          哈希多重映射。和排序容器不同，哈希容器中的元素是未排序的，元素的位置由哈希函数确定。
// 另外，以上3类容器的存储方式完全不同，因此使用不同容器完成相同操作的效率也大不相同。所以在实际使用时，要善于根据想实现的功能，选择合适的容器。

int main() { return 0; }